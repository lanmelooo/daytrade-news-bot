import requests
import feedparser
import sqlite3
import os
import time
import datetime
from keep_alive import keep_alive

# Telegram Configura√ß√£o
TELEGRAM_TOKEN = os.environ['TELEGRAM_TOKEN']
CHAT_ID = os.environ['CHAT_ID']

# Feeds RSS
RSS_FEEDS = [
    "https://br.investing.com/rss/news_285.rss",
    "https://www.reuters.com/rssFeed/topNews",
    "https://www.coindesk.com/arc/outboundfeeds/rss/"
]

# Palavras-chave
CATEGORY_A = [
    "tend√™ncia", "perspectiva", "proje√ß√£o", "expectativa", "cen√°rio",
    "abertura positiva", "abertura negativa", "futuros do √≠ndice",
    "futuros do d√≥lar", "sentimento do mercado", "vis√£o de analistas"
]

CATEGORY_B = [
    "Selic", "IPCA", "PIB", "infla√ß√£o", "Fed", "Payroll", "Copom",
    "commodities", "petr√≥leo", "ouro", "ETF", "circuit breaker",
    "volatilidade", "Bitcoin", "Ethereum", "d√≥lar", "taxa de juros",
    "risco fiscal", "risco pol√≠tico", "geopol√≠tica", "crise energ√©tica",
    "OPEP", "balan√ßa comercial", "swap cambial", "interven√ß√£o cambial",
    "decis√£o do FOMC", "decis√£o do BCE", "d√≠vida americana", "shutdown",
    "China", "recess√£o", "rally", "crash", "OMC", "conflito"
]

CATEGORY_C = [
    "guerra", "ataque", "colapso", "fal√™ncia", "congelamento", "default",
    "crise", "p√¢nico", "emerg√™ncia", "lockdown", "amea√ßa nuclear", "ataque cibern√©tico"
]

# Banco de dados
conn = sqlite3.connect('news.db')
c = conn.cursor()
c.execute('CREATE TABLE IF NOT EXISTS sent_news (link TEXT)')
conn.commit()

def send_telegram(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": message,
        "parse_mode": "HTML"
    }
    r = requests.post(url, data=payload)
    print(f"Mensagem enviada. Status: {r.status_code}")

def check_and_send():
    for feed_url in RSS_FEEDS:
        feed = feedparser.parse(feed_url)
        for entry in feed.entries:
            title = entry.title
            link = entry.link
            published = entry.published if "published" in entry else "Sem data"

            # Verificar duplicados
            c.execute('SELECT 1 FROM sent_news WHERE link = ?', (link,))
            if c.fetchone():
                continue

            # Categoria Extraordin√°ria
            if any(keyword.lower() in title.lower() for keyword in CATEGORY_C):
                prefix = "‚ö†Ô∏è <b>ALERTA EXTRAORDIN√ÅRIO</b>"
            # Categoria Tend√™ncia
            elif any(keyword.lower() in title.lower() for keyword in CATEGORY_A):
                prefix = "üöÄ <b>ALERTA DE TEND√äNCIA</b>"
            # Categoria Geral
            elif any(keyword.lower() in title.lower() for keyword in CATEGORY_B):
                prefix = "üö® <b>NOT√çCIA IMPORTANTE</b>"
            else:
                continue

            message = (
                f"{prefix}\n\n"
                f"<b>T√≠tulo:</b> {title}\n"
                f"<b>Fonte:</b> {feed.feed.title}\n"
                f"<b>Data:</b> {published}\n\n"
                f"<a href='{link}'>üîó Leia mais</a>"
            )

            send_telegram(message)
            c.execute('INSERT INTO sent_news (link) VALUES (?)', (link,))
            conn.commit()

if __name__ == "__main__":
    keep_alive()
    while True:
        now = datetime.datetime.now()
        hour = now.hour
        minute = now.minute

        # Mensagem das 05:50
        if hour == 5 and minute == 50:
            msg = (
                "üìÖ <b>Bom dia!</b>\n\n"
                "Vamos come√ßar pelo calend√°rio dos eventos econ√¥micos do dia:\n"
                "üîó <a href='https://br.investing.com/economic-calendar/'>Investing.com - Calend√°rio Econ√¥mico</a>"
            )
            send_telegram(msg)

        # Mensagem das 08:50
        if hour == 8 and minute == 50:
            msg = (
                "‚è∞ <b>O mercado vai abrir em 10 minutos.</b>\n\n"
                "Vale a pena uma olhada nos eventos econ√¥micos do dia:\n"
                "üîó <a href='https://br.investing.com/economic-calendar/'>Investing.com - Calend√°rio Econ√¥mico</a>"
            )
            send_telegram(msg)

        # Janela principal de opera√ß√£o
        if 6 <= hour < 19:
            print(f"‚è∞ {now.strftime('%H:%M')} ‚Äì Executando checagem...")
            check_and_send()
        else:
            print(f"üåô {now.strftime('%H:%M')} ‚Äì Fora do hor√°rio monitorado.")

        time.sleep(60)  # Checa a cada 1 min para pegar certinho os hor√°rios
